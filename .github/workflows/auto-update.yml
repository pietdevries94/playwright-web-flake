name: "Auto-update"
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ steps.updated.outputs.updated }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: ./update.sh
      - id: updated
        run: cat updated.txt >> "$GITHUB_OUTPUT"

  check-linux:
    if: needs.check-for-updates.outputs.updated == 'true'
    needs: check-for-updates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: ./update.sh
      - run: nix build .#playwright-driver
      - run: nix flake check

  check-darwin:
    if: needs.check-for-updates.outputs.updated == 'true'
    needs: check-for-updates
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - run: ./update.sh
      - run: nix build .#playwright-driver
      - run: nix flake check

  push-updates:
    needs: [check-for-updates, check-linux, check-darwin]
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: ./update.sh
      - name: Set commit and tagging message
        id: commit_message_step
        run: |
          echo 'commit_message<<EOF' >> $GITHUB_OUTPUT
          echo "Update to version $(cat version.txt)" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          echo 'tagging_message<<EOF' >> $GITHUB_OUTPUT
          cat version.txt >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ steps.commit_message_step.outputs.commit_message }}
          tagging_message: ${{ steps.commit_message_step.outputs.tagging_message }}
